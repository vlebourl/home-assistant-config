#### Close Close Open

close_open_open_lenaic:
  alias: Ferme velux ferme volet ouvre velux Lenaic
  sequence:
  - service: cover.close_cover
    entity_id: cover.velux_lenaic
  - wait_template: "{{ is_state('cover.velux_lenaic','closed')  }}"
    timeout: '00:01:00'
    continue_on_timeout: 'false'
  - service: cover.open_cover
    entity_id: cover.volet_lenaic
  - wait_template: "{{ is_state('cover.volet_lenaic','closed')  }}"
    timeout: '00:01:00'
    continue_on_timeout: 'false'
  - service: cover.set_cover_position
    data:
      entity_id: cover.velux_lenaic
      position: 100
    
close_open_open_palier:
  alias: Ferme velux ferme volet ouvre velux palier
  sequence:
  - service: cover.close_cover
    entity_id: cover.velux_palier
  - wait_template: "{{ is_state('cover.velux_palier','closed')  }}"
    timeout: '00:01:00'
    continue_on_timeout: 'false'
  - service: cover.open_cover
    entity_id: cover.volet_palier
  - wait_template: "{{ is_state('cover.volet_palier','closed')  }}"
    timeout: '00:01:00'
    continue_on_timeout: 'false'
  - service: cover.set_cover_position
    data:
      entity_id: cover.velux_palier
      position: 100
    
close_close_open_lenaic:
  alias: Ferme velux ferme volet ouvre velux Lenaic
  sequence:
  - service: cover.close_cover
    entity_id: cover.velux_lenaic
  - wait_template: "{{ is_state('cover.velux_lenaic','closed')  }}"
    timeout: '00:01:00'
    continue_on_timeout: 'false'
  - service: cover.close_cover
    entity_id: cover.volet_lenaic
  - wait_template: "{{ is_state('cover.volet_lenaic','closed')  }}"
    timeout: '00:01:00'
    continue_on_timeout: 'false'
  - service: cover.set_cover_position
    data:
      entity_id: cover.velux_lenaic
      position: 100
    
close_close_open_palier:
  alias: Ferme velux ferme volet ouvre velux palier
  sequence:
  - service: cover.close_cover
    entity_id: cover.velux_palier
  - wait_template: "{{ is_state('cover.velux_palier','closed')  }}"
    timeout: '00:01:00'
    continue_on_timeout: 'false'
  - service: cover.close_cover
    entity_id: cover.volet_palier
  - wait_template: "{{ is_state('cover.volet_palier','closed')  }}"
    timeout: '00:01:00'
    continue_on_timeout: 'false'
  - service: cover.set_cover_position
    data:
      entity_id: cover.velux_palier
      position: 100
    
#### Open and close the velux

## Palier

open_velux_palier:
  alias: Ouvre velux palier
  sequence:
  - condition: template
    value_template: '{{ states.cover.velux_palier.attributes.current_position < 50}}'
  - service: cover.set_cover_position
    data:
      entity_id: cover.velux_palier
      position: 100
      
close_velux_palier:
  alias: Ferme velux palier
  sequence:
  - condition: state
    entity_id: cover.velux_palier
    state: 'open'
  - service: cover.close_cover
    entity_id: cover.velux_palier

open_volet_palier:
  alias: Ouvre volet palier
  sequence:
  - service: cover.open_cover
    entity_id: cover.volet_palier
      
close_volet_palier:
  alias: Ferme volet palier
  sequence:
  - service: cover.close_cover
    entity_id: cover.volet_palier
      
open_both_palier:
  alias: Ouvre le volet et le velux du palier
  sequence:
  - service: cover.open_cover
    entity_id: cover.volet_palier
  - wait_template: "{{ is_state('cover.volet_palier','open')  }}"
    timeout: '00:01:00'
    continue_on_timeout: 'false'
  - service: cover.set_cover_position
    data:
      entity_id: cover.velux_palier
      position: 100
      
close_both_palier:
  alias: Ferme le volet et le velux du palier
  sequence:
  - service: cover.close_cover
    entity_id: cover.velux_palier
  - wait_template: "{{ is_state('cover.velux_palier','closed')  }}"
    timeout: '00:01:00'
    continue_on_timeout: 'false'
  - service: cover.close_cover
    entity_id: cover.volet_palier
      
secure_open_volet_palier:
  alias: Ouvre volet palier
  sequence:
  - condition: state
    entity_id: cover.volet_palier
    state: 'closed'
  - service: script.turn_on
    data_template:
      entity_id: >
        {% if is_state('cover.velux_palier','open') %}
          script.close_open_open_palier
        {% else %}
          script.open_volet_palier
        {% endif %}
    
secure_close_volet_palier:
  alias: Ferme proprement volet palier 
  sequence:
  - condition: state
    entity_id: cover.volet_palier
    state: 'open'
  - service: script.turn_on
    data_template:
      entity_id: >
        {% if is_state('cover.velux_palier','open') %}
          script.close_close_open_palier
        {% else %}
          script.close_volet_palier
        {% endif %}
     
## Lenaic

open_velux_lenaic:
  alias: Ouvre velux Lenaïc
  sequence:
  - condition: template
    value_template: '{{ states.cover.velux_lenaic.attributes.current_position < 50}}'
  - service: cover.set_cover_position
    data:
      entity_id: cover.velux_lenaic
      position: 100
      
close_velux_lenaic:
  alias: Ferme velux lenaic
  sequence:
  - condition: state
    entity_id: cover.velux_lenaic
    state: 'open'
  - service: cover.close_cover
    entity_id: cover.velux_lenaic

open_volet_lenaic:
  alias: Ferme volet palier
  sequence:
  - service: cover.open_cover
    entity_id: cover.volet_lenaic

close_volet_lenaic:
  alias: Ferme volet palier
  sequence:
  - service: cover.close_cover
    entity_id: cover.volet_lenaic
      
open_both_lenaic:
  alias: Ouvre le volet et le velux de Lenaïc
  sequence:
  - service: cover.open_cover
    entity_id: cover.volet_lenaic
  - wait_template: "{{ is_state('cover.volet_lenaic','open')  }}"
    timeout: '00:01:00'
    continue_on_timeout: 'false'
  - service: cover.set_cover_position
    data:
      entity_id: cover.velux_lenaic
      position: 100
      
close_both_lenaic:
  alias: Ferme le volet et le velux de Lenaïc
  sequence:
  - service: cover.close_cover
    entity_id: cover.velux_lenaic
  - wait_template: "{{ is_state('cover.velux_lenaic','closed')  }}"
    timeout: '00:01:00'
    continue_on_timeout: 'false'
  - service: cover.close_cover
    entity_id: cover.volet_lenaic
      
secure_open_volet_lenaic:
  alias: Ouvre volet Lenaïc
  sequence:
  - condition: state
    entity_id: cover.volet_lenaic
    state: 'closed'
  - service: script.turn_on
    data_template:
      entity_id: >
        {% if is_state('cover.velux_palier','open') %}
          script.close_open_open_lenaic
        {% else %}
          script.open_volet_lenaic
        {% endif %}
      
secure_close_volet_lenaic:
  alias: Ferme proprement volet Lenaïc
  sequence:
  - condition: state
    entity_id: cover.volet_lenaic
    state: 'open'
  - service: script.turn_on
    data_template:
      entity_id: >
        {% if is_state('cover.velux_lenaic','open') %}
          script.close_close_open_lenaic
        {% else %}
          script.close_volet_lenaic
        {% endif %}

#### Spotify

spotify_script_select_by_condition:
  alias: Spotify Script Select by Condition
  sequence:
  - service: script.turn_on
    data_template:
      entity_id: >
        {% if is_state('media_player.spotify', 'playing') and not is_state_attr('media_player.spotify', 'source', source_requesting) %}
          script.spotify_changing_source_while_playing
        {% elif not is_state_attr('media_player.spotify', 'source', source_requesting) %}
          script.spotify_changing_source
        {% else %}
          script.spotify_play_pause
        {% endif %}
      variables:
        source_requesting: "{{ source_requesting }}"
          
spotify_changing_source_while_playing:
  alias: Spotify Changing Source While Playing
  sequence:
  - service: media_player.select_source
    data_template:
      entity_id: media_player.spotify
      source: "{{ source_requesting }}"
  - service: media_player.shuffle_set
    data:
      entity_id: media_player.spotify
      shuffle: true
        
spotify_changing_source:
  alias: Spotify Changing Source
  sequence:
  - service: media_player.select_source
    data_template:
      entity_id: media_player.spotify
      source: "{{ source_requesting }}"
  - service: media_player.shuffle_set
    data:
      entity_id: media_player.spotify
      shuffle: true
  - service_template: media_player.media_play_pause
    entity_id: media_player.spotify
      
spotify_play_pause:
  alias: Spotify Play Pause
  sequence:
  - service: media_player.media_play_pause
    entity_id: media_player.spotify
  - service: media_player.shuffle_set
    data:
      entity_id: media_player.spotify
      shuffle: true
        
spotify_salon:
  sequence:
  - service: remote.turn_on
    entity_id: remote.harmony_hub
    data:
      activity: "Ecouter de la musique"
  - service: media_player.select_source
    data:
      entity_id: media_player.spotify
      source: CXN
  - service: script.turn_on
    entity_id: script.spotify_script_select_by_condition
    data:
      variables:
        source_requesting: "CXN"