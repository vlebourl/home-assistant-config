- id: ReduceHeatingForEmptyHome0
  alias: 0.1.0 Reduit le chauffage quand la maison est vide
  trigger:
  - platform: template
    value_template: ' {{ (states.proximity.home_vincent.state | float) > 1250 and
      (states.proximity.home_virginia.state | float) > 1250 }}'
  - at: '23:00:00'
    platform: time
  condition:
  - condition: state
    entity_id: binary_sensor.home_occupied
    state: 'off'
  action:
  - data:
      entity_id: group.chauffage
      temperature: 17
    service: climate.set_temperature
- id: AugmentHeatingOnOccupiedHome0
  alias: 0.2.0 Monte le chauffage quand la maison n'est pas vide
  trigger:
  - for:
      minutes: 3
    platform: template
    value_template: ' {{ (states.proximity.home_vincent.state | float) < 1250 or (states.proximity.home_virginia.state
      | float) < 1250 }}'
  - at: '17:30:00'
    platform: time
  - at: 06:00:00
    platform: time
  condition: []
  action:
  - data:
      entity_id: group.chauffage
    service: climate.turn_on
  - data:
      entity_id: group.chauffage
      temperature: 20
    service: climate.set_temperature
- id: FermeVeluxLenaic
  alias: 1.0 Ferme le velux de Lenaïc
  trigger:
  - platform: template
    value_template: '{{ (states.sensor.tdeg_lenaic.state | float) < 19 and (states.sensor.netatmo_terrasse_temperature.state         |
      float) < 18 and is_state(''cover.velux_lenaic'',''open'') }}'
  - platform: template
    value_template: '{{ (states.sensor.tdeg_lenaic.state | float) > 21 and (states.sensor.netatmo_terrasse_temperature.state         |
      float) > 22 and is_state(''cover.velux_lenaic'',''open'') }}'
  - platform: template
    value_template: '{{ ((states.sensor.netatmo_pluie_jardin_rain.state | float) >
      0.1 or is_state(''weather.ti_ar_kaerell'',''rainy'')) and is_state(''cover.velux_lenaic'',''open'')
      }}'
  action:
  - service: script.turn_on
    data:
      entity_id: script.close_velux_lenaic
- id: OuvreVeluxLenaic
  alias: 1.1 Ouvre le vélux de Lenaïc s'il fait assez frais dehors
  trigger:
  - platform: template
    value_template: '{{ (states.sensor.netatmo_terrasse_temperature.state         |
      float) < 21  and (states.sensor.tdeg_lenaic.state | float) > 22  and (states.cover.velux_lenaic.attributes.current_position    |
      float) < 95  and (states.sensor.netatmo_pluie_jardin_rain.state            |
      float) < 0.1 and not is_state(''weather.ti_ar_kaerell'',''rainy'') }}'
  action:
  - service: script.turn_on
    data:
      entity_id: script.open_velux_lenaic
- id: FermeVoletLenaic
  alias: 1.2 Ferme le volet de Lenaïc
  trigger:
  - platform: template
    value_template: '{{ (states.sensor.netatmo_terrasse_temperature.state         |
      float) > 26 and (states.sensor.tdeg_lenaic.state | float) > 25 and is_state(''weather.ti_ar_kaerell'',''sunny'')
      and is_state(''cover.volet_lenaic'',''open'') }}'
  - event: sunset
    offset: 00:30
    platform: sun
  - entity_id: sensor.home
    platform: state
    to: empty
  action:
  - data:
      entity_id: script.secure_close_volet_lenaic
    service: script.turn_on
- id: FermeVeluxPalier
  alias: 2.0 Ferme le velux du palier
  trigger:
  - platform: template
    value_template: '{{ (states.sensor.netatmo_palier_temperature.state   | float)
      < 19 and (states.sensor.netatmo_terrasse_temperature.state | float) < 18 and
      is_state(''cover.velux_palier'',''open'') }}'
  - platform: template
    value_template: '{{ (states.sensor.netatmo_palier_temperature.state   | float)
      > 21 and (states.sensor.netatmo_terrasse_temperature.state | float) > 22 and
      is_state(''cover.velux_palier'',''open'') }}'
  - platform: template
    value_template: '{{ ((states.sensor.netatmo_pluie_jardin_rain.state | float) >
      0.1 or is_state(''weather.ti_ar_kaerell'',''rainy'')) and is_state(''cover.velux_palier'',''open'')
      }}'
  action:
  - service: script.turn_on
    data:
      entity_id: script.close_velux_lenaic
- id: OuvreVeluxPalier
  alias: 2.1 Ouvre le vélux du palier s'il fait assez frais dehors
  trigger:
  - platform: template
    value_template: '{{ (states.sensor.netatmo_terrasse_temperature.state       |
      float) < 21  and (states.sensor.netatmo_palier_temperature.state         | float)
      > 22  and (states.cover.velux_palier.attributes.current_position  | float) <
      95  and (states.sensor.netatmo_pluie_jardin_rain.state          | float) < 0.1
      and not is_state(''weather.ti_ar_kaerell'',''rainy'') }}'
  action:
  - service: script.turn_on
    data:
      entity_id: script.open_velux_lenaic
- id: FermeVoletPalier
  alias: 2.2 Ferme le volet du palier
  trigger:
  - platform: template
    value_template: '{{ (states.sensor.netatmo_terrasse_temperature.state | float)
      > 26 and (states.sensor.netatmo_palier_temperature.state   | float) > 25 and
      is_state(''weather.ti_ar_kaerell'',''sunny'') and is_state(''cover.volet_palier'',''open'')
      }}'
  action:
  - service: script.turn_on
    data:
      entity_id: script.secure_close_volet_lenaic
- id: '000'
  alias: ouvre le volet le matin en semaine
  description: ''
  trigger:
  - at: 06:50:00
    platform: time
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  action:
  - entity_id: cover.volet_parents
    service: cover.open_cover
- id: '1578933646759'
  alias: log webhook
  description: ''
  trigger:
  - platform: webhook
    webhook_id: 0139a42bd40897717441be1a14a6466879f4a1fc91ecaae9886605baa349ec46
  - platform: webhook
    webhook_id: netatmo_webhook
  condition:
  - condition: state
    entity_id: sensor.home
    state: empty
  action:
  - data_template:
      message: '{{ trigger.json }}'
    service: notify.custom_log_file
- id: '1580818178420'
  alias: ferme le volet quand la lumière s'éteint dans la chambre parentale
  description: ''
  trigger:
  - entity_id: group.lux_parents
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - after: '21:00:00'
    condition: time
  action:
  - data: {}
    entity_id: cover.volet_parents
    service: cover.close_cover
- id: '1580841955334'
  alias: Referme le verrou
  description: ''
  trigger:
  - entity_id: lock.ti_ar_kaerell
    for: 0:03:00
    platform: state
    to: unlocked
  condition: []
  action:
  - entity_id: lock.ti_ar_kaerell
    service: lock.lock
- id: '1580853538230'
  alias: verrouille la maison quand elle est vide
  description: ''
  trigger:
  - entity_id: binary_sensor.home_occupied
    for: 00:01:00
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - entity_id: lock.ti_ar_kaerell
    service: lock.lock
  - entity_id: group.velux_etage
    service: cover.close_cover
  - entity_id: group.volets
    service: cover.close_cover
  - entity_id: group.volet_etage
    service: cover.close_cover
- id: '1580970460296'
  alias: verrouille la porte
  description: ''
  trigger:
  - entity_id: remote.interrupteur_entree
    platform: state
  condition:
  - condition: state
    entity_id: sensor.button_lock_button_used
    state: lock
  action:
  - delay: 00:00:03
  - entity_id: lock.ti_ar_kaerell
    service: lock.lock
- id: '1581007064090'
  alias: Déverouille la porte
  description: ''
  trigger:
  - entity_id: remote.interrupteur_entree
    platform: state
  condition:
  - condition: state
    entity_id: sensor.button_lock_button_used
    state: unlock
  action:
  - entity_id: lock.ti_ar_kaerell
    service: lock.unlock
- id: '1581007152058'
  alias: Virginia arrive
  description: ''
  trigger:
  - entity_id: person.virginia
    event: enter
    platform: zone
    zone: zone.home
  condition: []
  action:
  - data:
      message: Virginia arrive
    service: notify.mobile_app_pixel_4
- id: '1581007152057'
  alias: Vincent arrive
  description: ''
  trigger:
  - entity_id: person.vincent
    event: enter
    platform: zone
    zone: zone.home
  condition: []
  action:
  - data:
      message: Vincent arrive
    service: notify.mobile_app_pixel_4
  - entity_id: lock.ti_ar_kaerell
    service: lock.unlock
- id: '1581144425280'
  alias: test tag porte d'entrée
  description: ''
  trigger:
  - entity_id: binary_sensor.camsalon_porte_d_entree_tag_open
    platform: state
  - entity_id: binary_sensor.camsalon_porte_d_entree_tag_vibration
    platform: state
  condition: []
  action:
  - data:
      message: porte bouge
    service: notify.mobile_app_pixel_4
